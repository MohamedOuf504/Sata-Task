version: "3.8"
services:
  dev:
    image: sata-image-dev
    container_name: sata-container-dev
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    depends_on:
      - mongo
      - mongo-express
    command: npm run start:dev
    ports:
      - "${NODE_PORT}:3000"
    restart: always
    volumes:
      - .:/app
    environment:
      MONGO_URL: ${DB_URI}
      PORT: ${NODE_PORT}
      CLOUD_NAME: ${CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}

  ########################################################
  prod:
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    image: sata-image-prod
    container_name: sata-container-prod
    depends_on:
      - mongo
      - mongo-express
    command: npm run start
    ports:
      - "${NODE_PORT}:3000"
    restart: always
    volumes:
      - .:/app
    environment:
      MONGO_URL: ${DB_URI}
      PORT: ${NODE_PORT}
      CLOUD_NAME: ${CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
  ####################test###############################
  test:
    build:
      context: .
      target: test
      dockerfile: ./Dockerfile
    image: sata-image-test
    container_name: sata-container-test
    depends_on:
      - mongo
    command: npm run test
    volumes:
      - .:/app
    environment:
      MONGO_URL: ${DB_URI_TEST}
      PORT: ${NODE_PORT_TEST}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}

  ####################mongo###############################
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo-db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
  ####################mongo-express########################
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: user
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://user:password@mongo:27017/
    depends_on:
      - mongo

volumes:
  mongo-db:
